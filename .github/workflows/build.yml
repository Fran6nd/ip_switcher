name: Build IP Switcher

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [created]

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: macos-latest
            arch: x86_64
            python-arch: x64
          - os: macos-14
            arch: arm64
            python-arch: arm64
          - os: windows-latest
            arch: x86_64
            python-arch: x64
          - os: windows-latest
            arch: arm64
            python-arch: arm64

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        architecture: ${{ matrix.python-arch }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install nuitka

    - name: Generate icons
      run: |
        if [ "${{ matrix.os }}" = "windows-latest" ]; then
          # Generate ICO file for Windows (using ImageMagick if available, otherwise skip)
          if command -v convert &> /dev/null; then
            convert icon.png -resize 256x256 ip_switcher.ico
          else
            echo "ImageMagick not available, skipping icon generation"
          fi
        else
          # Generate ICNS file for macOS
          make icons
        fi
      shell: bash

    - name: Build with Nuitka
      run: |
        if [ "${{ matrix.os }}" = "windows-latest" ]; then
          python -m nuitka --onefile --enable-plugin=tk-inter --include-package=tkinter --include-package=_tkinter ip_switcher.py
        else
          python -m nuitka --onefile --macos-create-app-bundle --enable-plugin=tk-inter --include-package=tkinter --include-package=_tkinter ip_switcher.py
        fi
      shell: bash

    - name: Prepare artifacts for Windows
      if: matrix.os == 'windows-latest'
      run: |
        mv ip_switcher.exe ip_switcher-windows-${{ matrix.arch }}.exe
      shell: bash

    - name: Prepare artifacts for macOS
      if: startsWith(matrix.os, 'macos')
      run: |
        # For macOS, we get an .app bundle, compress it
        tar -czf ip_switcher-macos-${{ matrix.arch }}.tar.gz ip_switcher.app
      shell: bash

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ip_switcher-${{ matrix.os }}-${{ matrix.arch }}
        path: |
          ip_switcher-windows-*.exe
          ip_switcher-macos-*.tar.gz
        compression-level: 9
        retention-days: 5

    - name: Upload release assets
      if: github.event_name == 'release'
      uses: softprops/action-gh-release@v1
      with:
        files: |
          ip_switcher-windows-*.exe
          ip_switcher-macos-*.tar.gz